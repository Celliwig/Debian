#!/bin/bash

# Don't exit on error
#set -e

. /usr/share/debconf/confmodule

# Remove user/group
if [ "$1" = purge ]; then
	# Check for kiosk user
	if db_get kiosk-user/username; then
		KIOSK_USER="$RET"

		# Check for processes running as user
		loop=1
		loop_count=0
		echo -n "Checking for running processes."
		while [ "${loop}" -eq 1 ]; do
			echo -n "."
			# Check for running processes
			ps -u "${KIOSK_USER}" >/dev/null 2>&1
			if [ ${?} -eq 1 ]; then
				loop=0
			fi
			# Timeout
			if [ "${loop_count}" -gt 30 ]; then
				echo " Timeout"
				return 255
			fi
			loop_count=$((loop_count+1))
			sleep 1
		done
		echo " Okay"

		# Check whether to delete user
		if db_get kiosk-user/user_delete && [ "${RET}" = true ]; then
			if getent passwd "${KIOSK_USER}" >/dev/null; then
				if [ -x /usr/sbin/deluser ]; then
					deluser "${KIOSK_USER}" ||echo " Could not remove ${KIOSK_USER} user"
				fi
			fi
		fi

		# Check whether to delete group
		if db_get kiosk-user/group_delete && [ "${RET}" = true ]; then
			if getent group "${KIOSK_USER}" >/dev/null; then
				if [ -x /usr/sbin/delgroup ]; then
					delgroup "${KIOSK_USER}" || echo "Could not remove ${KIOSK_USER} group"
				fi
			fi
		fi

		# Check whether to delete home directory
		if db_get kiosk-user/home_dir_delete && [ "${RET}" = true ]; then
			if [ -d "/home/${KIOSK_USER}" ]; then
				rm -rf "/home/${KIOSK_USER}"
			fi
		fi
	else
		echo "postrm: no kiosk user set \`$1'" >&2
		exit 1
	fi
fi

# Remove package from debconf
if [ "$1" = purge ]; then
	db_purge
fi
